import telebot
from telebot.types import ReplyKeyboardMarkup, KeyboardButton

# Создаем экземпляр бота с указанием токена
bot = telebot.TeleBot("7084622665:AAGNCq2Fsu5-_2jlryc7kQXIZGWwfxBqV0Y")


# Список часто задаваемых вопросов
faq_list = [
    "Будут ли мне платить зарплату?",
    "В каких городах я могу постажироваться?",
    "Можно ли проходить стажировку удалённо?",
    "Сколько длится стажировка?",
    "Смогу ли я совмещать учёбу и стажировку?",
    "У меня нет опыта, но я очень хочу научиться, возьмёте меня?",
    "Что будет, когда стажировка закончится?",
    "Что нужно уметь стажеру?",
    "А могут отчислить?",
    "А что ещё я получу?"
]

# Список ответов на вопросы
answers = [
    "Да, работа каждого стажёра оплачивается. Зарплата зависит от фактического времени работы.",
    "У нас есть удалёнка, и в компании достаточно широкая география.\nНаши офисы есть в таких городах, как: Ангарск, Владимир, Глазов, Димитровград, Екатеринбург, Зеленогорск, Казань, Ковров, Москва, Нижний Новгород, Новосибирск, Новоуральск, Петрозаводск, Ростов-на-Дону, Санкт-Петербург, Северск, Саров, Томск, Уфа, Мурманск, Тверь, Обнинск, Балаково, Волгодонск, Краснокаменск",
    "У нас есть возможность проходить стажировку удаленно. Если наш филиал есть в твоем городе, можем обсудить частичный выход в офис для знакомства с командой.",
    "Минимально стажировка рассчитана на 3 месяца.\nБывают программы и большей продолжительности. Срок определяется из твоего графика и специфики направления",
    "Да, мы можем рассмотреть не только полную, но и частичную занятость. Главное, чтобы твоя стажировка проходила в будние дни и рабочие часы",
    "У нас есть вакансии с базовым бэкграундом. А для тех, кто хочет начать с нуля, у нас действуют программы подготовки.",
    "Лучшим стажёрам мы предлагаем заключить бессрочный контракт — устроиться на постоянную работу в нашу отрасль",
    "Всем стажёрам нужны отличные знания базовых алгоритмов и структур данных, а также умение писать код на одном из языков программирования. Остальные требования зависят от направления.\nПри отборе кандидатов мы обращаем внимание на анкеты и достижения. Не стесняйтесь писать о своих успехах: победах на олимпиадах, высокой успеваемости, публикациях на конференциях и так далее.",
    "Да, могут, стажировка — это настоящая работа, и если стажёр с ней не справляется, то по результатам очередной промежуточной оценки может быть не рекомендован к продолжению участия в программе.",
    "Мы надеемся, что ты станешь частью нашей  большой команды, и готовы помогать.\nМы гарантируем:\n•помощь руководителя, наставника,\n• регулярную оценку и обратную связь,\n•  участие в профильных конференциях,\n•  тренинги для развития профессиональных и личностных качеств"
]

# Обработчик команды /start
@bot.message_handler(commands=['start'])
def start_command(message):
    # Создаем клавиатуру
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True)
    bot.send_message(message.chat.id, "Привет! Я бот Росатом Стажировка и я здесь, чтобы помочь тебе узнать все о стажировках и мероприятиях в компании Росатом.", reply_markup=keyboard)
    # Добавляем кнопки
    keyboard.row("Часто задаваемые вопросы",
                 "Задать свой вопрос")
    keyboard.row("Информация об открытых стажировках",
                 "Информация о мероприятих")

# Обработчик кнопки "Часто задаваемые вопросы."
@bot.message_handler(func=lambda message: message.text == "Часто задаваемые вопросы.")
def faq_command(message):
    faq_text = "Вот часто задаваемые вопросы:\n"
    for i, question in enumerate(faq_list, 1):
        faq_text += f"{i}. {question}\n"
    faq_text += "Напишите номер интересующего вас вопроса"
    bot.send_message(message.chat.id, faq_text)
    # Удаляем клавиатуру после отправки списка вопросов
    bot.send_message(message.chat.id, "Выберите номер интересующего вас вопроса:", reply_markup=None)

    # Помечаем пользователя, что ожидается выбор вопроса
    bot.register_next_step_handler(message, handle_faq_choice)

# Обработчик текстовых сообщений для выбора вопроса из списка
def handle_faq_choice(message):
    if message.text.isdigit():
        question_number = int(message.text)
        if 1 <= question_number <= len(answers):
            bot.send_message(message.chat.id, answers[question_number - 1])
        else:
            bot.send_message(message.chat.id, "Такого вопроса нет в списке.")

# Обработчик текстовых сообщений
@bot.message_handler(func=lambda message: True)
def handle_text(message):
    # Здесь можно добавить обработку других сообщений
    pass

# Запускаем бота
bot.infinity_polling()
